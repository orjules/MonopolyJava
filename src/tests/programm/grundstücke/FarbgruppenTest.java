package programm.grundstücke;

import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import programm.system.spieler.Spieler;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.when;

class FarbgruppenTest {

    private Farbgruppen cyan;
    Grundbuch grundbuch;


    public void initUnterschiedlich(){
        Spieler spieler1 = Mockito.mock(Spieler.class);
        Spieler spieler2 = Mockito.mock(Spieler.class);

        grundbuch = Mockito.mock(Grundbuch.class);
        Straße[] straßen = getMockStraße();
        when(grundbuch.getBesitzerVon(straßen[0])).thenReturn(spieler1);
        when(grundbuch.getBesitzerVon(straßen[1])).thenReturn(spieler2);
        when(grundbuch.getBesitzerVon(straßen[2])).thenReturn(null);
    }

    public void initAlleGleich(){
        Spieler spieler1 = Mockito.mock(Spieler.class);

        grundbuch = Mockito.mock(Grundbuch.class);
        Straße[] straßen = getMockStraße();
        when(grundbuch.getBesitzerVon(straßen[0])).thenReturn(spieler1);
        when(grundbuch.getBesitzerVon(straßen[1])).thenReturn(spieler1);
        when(grundbuch.getBesitzerVon(straßen[2])).thenReturn(spieler1);
    }

    private Straße[] getMockStraße(){
        Straße straße1 = Mockito.mock(Straße.class);
        Straße straße2 = Mockito.mock(Straße.class);
        Straße straße3 = Mockito.mock(Straße.class);
        Straße[] zugerhörige = new Straße[]{straße1, straße2, straße3};

        cyan = new Farbgruppen(Farben.hellblau, zugerhörige, grundbuch);

        return zugerhörige;
    }

    @Test
    public void alleUnterschiedlich(){
        initUnterschiedlich();
        assertFalse(cyan.istkomplett());
    }

    @Test
    public void alleAnders(){
        initAlleGleich();
        assertTrue(cyan.istkomplett());
    }

}